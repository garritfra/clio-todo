import get_todos update_todo add_todo todo_emitter remove_todo from ws://localhost:3000

@eager
fn do_add_todo event:
  event -> preventDefault
  'Untitled' 'Enter description' -> add_todo

'#add-todo' -> $ -> click do_add_todo
'#todo-template' -> $ -> html -> Handlebars.compile => template

@eager
fn do_update_todo event:
  event.target -> $ -> $parent => $todo -> addClass 'editing'
  $todo -> $find '.title' -> text => title
  $todo -> $find '.body' -> html => body
  $todo -> $find '.status' -> prop #checked => checked
  $todo -> attr 'data-todo-id' => id
  id title body checked -> update_todo

@eager
fn do_remove_todo event:
  event -> preventDefault
  event.target -> $ -> $parent -> attr 'data-todo-id' -> remove_todo

@eager
fn remove_editing_class event:
  '.editing' -> $ -> removeClass 'editing'

'body' -> $
       -> on 'click' '.remove' do_remove_todo
       -> on 'input' '.todo' do_update_todo
       -> on 'focusout' '.todo' remove_editing_class

@eager
fn update_page todo:
  if not todo.old_val: -- it's a new to-do item
    todo.new_val -> template -> $ -> appendTo '#todos'
  elif not todo.new_val: -- the to-do item was removed
    '[data-todo-id=' todo.old_val.id ']' -> cat -> $ -> remove
  else: -- it was updated
    '[data-todo-id=' todo.new_val.id ']'
      -> cat -> $
      => $container
      -> hasClass 'editing'
      -> if not:
          todo.new_val -> template -> $ => $new
          $container -> replaceWith $new

todo_emitter:#change -> update_page
'now' -> get_todos ->* template ->* $ ->* appendTo '#todos'
